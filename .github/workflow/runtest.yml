name: MLOPS Sanity Run Test

on:
  workflow_dispatch:
  pull_request:
    branches: [main]

permissions:
  pull-requests: write    # Needed for CML to comment on the PR
  contents: read          # Needed for actions/checkout

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install black flake8 pytest
      - name: Auto-format with Black
        run: |
          source .venv/bin/activate
          echo "# ðŸ§ª MLOps Sanity Test Report" > result.txt
          echo "## Code Formatting (Black)" >> result.txt
          black --check --diff train.py test/ >> result.txt 2>&1 || echo "Formatting issues found" >> result.txt
          echo "" >> result.txt
      - name: Lint with Flake8
        run: |
          source .venv/bin/activate
          echo "## Linting Results (Flake8)" >> result.txt
          flake8 train.py test/ --max-line-length=88 --extend-ignore=E203,W503 >> result.txt 2>&1 || echo "Linting issues found" >> result.txt
          echo "" >> result.txt
      - name: Run training and testing
        run: |
          source .venv/bin/activate
          python train.py > training.log
          echo "## Unit Test Results" >> result.txt
          python -m unittest discover test >> result.txt 2>&1 || echo "Test failures found" >> result.txt
          echo "" >> result.txt
          cat training.log >> result.txt
          echo "Tests completed on $(date)" >> result.txt
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: model-artifacts
          path: |
            model/model.pkl
            result.txt
      - name: Setup CML
        uses: iterative/setup-cml@v2

      - name: Comment test results with CML
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          source .venv/bin/activate
          cml comment create --file result.txt
